<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_heart_laberinto</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-1</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>obj_jugador.visible = 0;
image_blend = c_red;
image_speed = 0;
xSPD = 0;
finalizado = 0;
ySPD = 0;
spd = 5;
p = 0;
walking = 0;
walk = 0;
dir = 270;
lock = 0;
moving = 0;
oldX = 0;
oldY = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>obj_jugador.visible = 1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if !instance_exists(obj_jugador) exit;

obj_jugador.x = x;
obj_jugador.y = y;


oldX = xprevious;
oldY = yprevious;

if oldX != x || oldY != y { moving = 1 } else { moving = 0; }
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>scrVelocityPhysics();

if KeyCont.key_right[0] = 1 || KeyCont.key_right[0] = 2 {

    if KeyCont.key_secondary[0] = 2 {
    
        xSPD = spd/2;

    } else {

        xSPD = spd;
    
    }
}


if KeyCont.key_down[0] = 1 || KeyCont.key_down[0] = 2 {

    if KeyCont.key_secondary[0] = 2 {
    
        ySPD = spd/2;
    
    } else {

        ySPD = spd;
    
    }
    
}


if KeyCont.key_up[0] = 1 || KeyCont.key_up[0] = 2 {

    if KeyCont.key_secondary[0] = 2 { ySPD = -spd/2; } else { ySPD = -spd; } }

    
if KeyCont.key_left[0] = 1 || KeyCont.key_left[0] = 2 {

    if KeyCont.key_secondary[0] = 2 { xSPD = -spd/2; } else { xSPD = -spd; } }
    

//Fixear

if KeyCont.key_right[0] = 0 &amp;&amp; KeyCont.key_left[0] = 0 { xSPD = 0; }

if KeyCont.key_up[0] = 0 &amp;&amp; KeyCont.key_down[0] = 0 { ySPD = 0; }
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="72">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_self();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_set_font(fnt_mars);
draw_set_halign(fa_left);
draw_set_color(c_white);

if instance_exists(obj_caja) {

draw_set_color(c_red);
draw_rectangle(260 + global.offset, global.HUDyPos - 10, 260 + global.totalHP, global.HUDyPos + 10, false);
draw_set_color(c_lime);
draw_rectangle(260, global.HUDyPos - 10, 260 + global.totalHP, global.HUDyPos + 10, false);
draw_set_color(c_blue);
draw_rectangle(260 - global.offset, global.HUDyPos - 10, 260 + global.totalHP, global.HUDyPos + 10, false);
draw_set_color(c_maroon);
draw_rectangle(260, global.HUDyPos - 10, 260 + global.totalHP, global.HUDyPos + 10, false);
draw_set_color(global.bcolor);
draw_rectangle(260, global.HUDyPos - 10, 260 + global.hp, global.HUDyPos + 10, false);

draw_set_font(fnt_mars);
draw_set_color(c_red);
draw_text(220 - global.offset, global.HUDyPos, "HP");
draw_text(30 - global.offset, global.HUDyPos, global.nombre);
draw_text(260 + global.totalHP + 10 - global.offset, global.HUDyPos, string(global.hp) + " / " + string(global.totalHP));
draw_set_color(c_lime);
draw_text(220, global.HUDyPos, "HP");
draw_text(30, global.HUDyPos, global.nombre);
draw_text(260 + global.totalHP + 10, global.HUDyPos, string(global.hp) + " / " + string(global.totalHP));
draw_set_color(c_blue);
draw_text(220 + global.offset, global.HUDyPos, "HP");
draw_text(30 + global.offset, global.HUDyPos, global.nombre);
draw_text(260 + global.totalHP + 10 + global.offset, global.HUDyPos, string(global.hp) + " / " + string(global.totalHP));
draw_set_color(c_white);
draw_text(220, global.HUDyPos, "HP");
draw_text(30, global.HUDyPos, global.nombre);
draw_text(260 + global.totalHP + 10, global.HUDyPos, string(global.hp) + " / " + string(global.totalHP));

}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
