<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-999999</depth>
  <persistent>-1</persistent>
  <parentName>BotonHerencia</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>joystickAnchorX = 100;
joystickAnchorY = 350;
joystickActive = 0;
joystickMovementX = 0;
joystickMovementY = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if device_mouse_check_button(0, mb_any) {

    var mx = device_mouse_x(0);
    var my = device_mouse_y(0);

    if joystickActive = 0 {

        //Acercar Joystick al dedo del jugador (No creo que sea util pero aqui esta el codigo)
        
/*
        if mx &lt;= 220 &amp;&amp; my &gt;= 240 {
    
            joystickAnchorX = mx;
            joystickAnchorY = my;
    
        }
*/
        joystickActive = 1;
        
    } else if mx &lt;= 220 {
        
        angle = point_direction(joystickAnchorX,joystickAnchorY, mx, my);
        distance = point_distance(joystickAnchorX,joystickAnchorY ,mx, my);
        joystickMovementX = dcos(angle) * min(20, distance);
        joystickMovementY = -dsin(angle) * min(20, distance);
    
    }

} else {

    joystickActive = 0;
    joystickMovementX = 0;
    joystickMovementY = 0;

}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="75">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_sprite_ext(spr_joystick, 0, joystickAnchorX, joystickAnchorY, 2, 2, 0, global.FinalColor, global.BOpacidad);
draw_sprite_ext(spr_punto, 0, joystickAnchorX + joystickMovementX, joystickAnchorY + joystickMovementY, 1, 1, 0, global.FinalColor, global.BOpacidad);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
