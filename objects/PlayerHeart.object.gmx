<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>sprHeartMask</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>enum PLAYER_STATE {red, blue, yellow, purple, green, 
azul_arriba, red_inverse, red_derecha, red_izquierda, 
blue_derecha, blue_inverse, blue_izquierda, cyan, yellow_izquierda};
currentState = PLAYER_STATE.red;
targetState = PLAYER_STATE.red;
height = 8;
width = 8;
spd = 5;
state = 0;
image_speed = 0;
active = 0;
alive = 1;
ySPD = 0;
grav = 0.4;
jumpPOW = 8;
moving = false;
oldX = x;
oldY = y;
dir = 0;
changingState = 0;
global.peleando = 0;
enfriamiento = 0;
cerca = 0;
siner = 0;
colision = 0;
global.colision_gaster = false;
shoot = 0;
caida = 0.2;
lockSalto = 0;
jumpstage = 0;
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Variables Big Shot

bigshoot = 0; //Iniciar Big Shot?
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Flash
if bleeps &gt; 0 &amp;&amp; alive = 1 {

    bleeps--;
    image_alpha = 1.5 - image_alpha;
    alarm[0] = 2;
    
} else { state = 0; }
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Mantener corazon en la caja (Peleando)

if global.peleando = 1 {

if x + width &gt;= BattleWindowCont.xPos + BattleWindowCont.width
{
    x = BattleWindowCont.xPos + BattleWindowCont.width - width;
}
if x - width &lt;= BattleWindowCont.xPos
{
    x = BattleWindowCont.xPos + width;
}
if y + height &gt;= BattleWindowCont.yPos + BattleWindowCont.height
{
    y = BattleWindowCont.yPos + BattleWindowCont.height - height;
}
if y - height &lt;= BattleWindowCont.yPos
{
    y = BattleWindowCont.yPos + height;
}

}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Sistema de Disparo alma amarilla

if currentState = PLAYER_STATE.yellow &amp;&amp; global.peleando = 1 &amp;&amp; enfriamiento = 0 {

if KeyCont.key_primary[0] = 1 &amp;&amp; active != 0 {

shoot = 1;
enfriamiento = 10;
instance_create(self.x, self.y - 16, obj_balita);

}

}



if currentState = PLAYER_STATE.yellow_izquierda &amp;&amp; global.peleando = 1 &amp;&amp; enfriamiento = 0 {

if KeyCont.key_primary[0] = 1 &amp;&amp; active != 0 {

shoot = 1;
enfriamiento = 10;
instance_create(self.x - 16, self.y, obj_balita_izquierda);

}

}



/*

if (currentState = PLAYER_STATE.yellow_izquierda

|| currentState = PLAYER_STATE.yellow) &amp;&amp; global.peleando = 1 &amp;&amp; enfriamiento = 0 {

if KeyCont.key_primary[0] = 1 &amp;&amp; active != 0 {

//shoot = 1;
enfriamiento = 10;
//instance_create(self.x - 16, self.y, obj_balita_izquierda);

}


if KeyCont.key_primary[0] = 0 &amp;&amp; bigshoot &lt; 3 {

//shoot = 0;
instance_create(self.x - 16, self.y, obj_balita_izquierda);

}

}

*/
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Proceso del Big Shot

/*
if currentState = PLAYER_STATE.yellow ||
currentState = PLAYER_STATE.yellow_izquierda &amp;&amp; global.peleando = 1 {

if KeyCont.key_primary[0] = 2 &amp;&amp; active != 0 &amp;&amp; bigshoot &lt;= 2 {

bigshoot++;

}

if KeyCont.key_primary[0] = 2 &amp;&amp; bigshoot = 3 {

instance_create(x, y, obj_carga_shot);
bigshoot++;

}

}

if KeyCont.key_primary[0] = 0 &amp;&amp; bigshoot = 4 { 

with obj_carga_shot { instance_destroy(); }
bigshoot = 0;

}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Colision de plataformas


/*
if ySPD &gt;= 0 &amp;&amp; place_meeting(x,y,obj_plataforma1_1) ||
ySPD &gt;= 0 &amp;&amp; place_meeting(x, y, obj_plataforma1) {

    if KeyCont.key_up[0] = 1 || KeyCont.key_up[0] = 2 {   

        ySPD = -jumpPOW;

    } else { ySPD = 0; }

}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Humo

if place_meeting(x, y, obj_humo) || place_meeting(x, y, obj_humo2) {

image_blend = c_black;

} else { siner = 0; }

if image_blend == c_black {

siner+=0.5;
image_alpha = sin(siner * 0.3) * 0.5;

}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Colision combate

if colision = 1 { spd = 0;

} else { spd = 5; }
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Cambio de alma y Muerte

if alive = 1 &amp;&amp; changingState = 0
{
    switch(currentState)
    {
        case PLAYER_STATE.red:
            image_blend = c_red;
            image_index = 0;
            break;
            
        case PLAYER_STATE.blue:
            image_blend = c_blue;
            image_index = 0;
            break;
            
        case PLAYER_STATE.red_inverse:
            image_blend = c_red;
            image_index = 2;
            break;
            
        case PLAYER_STATE.red_derecha:
            image_blend = c_red;
            image_index = 3;
            break;
            
        case PLAYER_STATE.blue_izquierda:
            image_blend = c_blue;
            image_index = 3;
            break;
            
        case PLAYER_STATE.blue_derecha:
            image_blend = c_blue;
            image_index = 4;
            break;
            
        case PLAYER_STATE.blue_inverse:
            image_blend = c_blue;
            image_index = 2;
            break;
            
        case PLAYER_STATE.red_izquierda:
            image_blend = c_red;
            image_index = 4;
            break;
            
        case PLAYER_STATE.yellow:
            image_blend = c_yellow;
            image_index = 2;
            break;
            
        case PLAYER_STATE.yellow_izquierda:
            image_blend = c_yellow;
            image_index = 3;
            break;
            
        case PLAYER_STATE.purple:
            image_blend = c_purple;
            break;
            
        case PLAYER_STATE.green:
            image_blend = c_green;
            mask_index = sprGreenMask;
            break;    
            
        case PLAYER_STATE.cyan:
            image_blend = c_aqua;
            break;
              
    }
    
    //ESTO ES UN DEBUG, QUITAR ANTES DE UNA VERSION PUBLICA
    
    if global.lasthp &lt;= 0 {
    
    global.lasthp = 1;
    global.hp = global.maxHP - 1;
    global.kl = 0;
    audio_play_sound(sndHeal, 0, false);
    
    }
    
    //SI EL JUGADOR TIENE SU HP A 0:
    
    /*
    if (global.lasthp &lt;= 0 &amp;&amp; global.idioma = "Spanish") {
        
        global.muertes++;
        scr_guardar();
        audio_stop_all();
        audio_play_sound(sndPlayerHurt,100,false);
        room_goto(room_muerte);
    
    }
    
    
    if (global.lasthp &lt;= 0 &amp;&amp; global.idioma = "English") {
        
        global.muertes++;
        scr_guardar();
        audio_stop_all();
        audio_play_sound(sndPlayerHurt,100,false);
        room_goto(room_died);
    
    }
    */
    
}


if instance_exists(obj_colision_cyan) &amp;&amp; global.peleando = 0 {

with obj_colision_cyan { instance_destroy(); }

}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Init behavior
if active = 0
{
    ySPD = 0;
    exit;
}

</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Alma Roja y amarilla

if currentState = PLAYER_STATE.red || 

currentState = PLAYER_STATE.yellow_izquierda {

if shoot &gt; 0 { shoot = 0; }

    if KeyCont.key_up[0] = 1 || KeyCont.key_up[0] = 2
    {
        if KeyCont.key_secondary[0] = 2
        {
            y -= spd/2;
        }
        else
        {
            y -= spd;
        }
    }
    if KeyCont.key_down[0] = 1 || KeyCont.key_down[0] = 2
    {
        if KeyCont.key_secondary[0] = 2
        {
            y += spd/2;
        }
        else
        {
            y += spd;
        }
    }

    //Movimiento Horizontal
    if KeyCont.key_left[0] = 1 || KeyCont.key_left[0] = 2
    {
        if KeyCont.key_secondary[0] = 2
        {
            x -= spd/2;
        }
        else
        {
            x -= spd;
        }
    }
    if KeyCont.key_right[0] = 1 || KeyCont.key_right[0] = 2
    {
        if KeyCont.key_secondary[0] = 2
        {
            x += spd/2;
        }
        else
        {
            x += spd;
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Azul Abajo
if currentState = PLAYER_STATE.blue
{
    if lockSalto = 0 { y += ySPD; }
    if lockSalto = 0 { ySPD += grav; }
    
    
if ySPD &lt;= 0 &amp;&amp; KeyCont.key_up[0] = 0 { ySPD *= caida; }

if y + height &gt;= BattleWindowCont.yPos + BattleWindowCont.height {

    ySPD = 0;
    y = BattleWindowCont.yPos + BattleWindowCont.height - height;
        
    if KeyCont.key_up[0] = 1 || KeyCont.key_up[0] = 2 {

        ySPD = -jumpPOW;
     
    }
       
}

if y + height &gt;= BattleWindowCont.yPos + BattleWindowCont.height

{
    if grav &gt; 0.4 {
    
        grav = 0.4;
        audio_play_sound(snd_Azotado,0,false);
        
    }
    
}    
    
    //Movimiento Horizontal
    if KeyCont.key_left[0] = 1 || KeyCont.key_left[0] = 2
    {
        if KeyCont.key_secondary[0] = 2
        {
            x -= spd/2;
        }
        else
        {
            x -= spd;
        }
    }
    if KeyCont.key_right[0] = 1 || KeyCont.key_right[0] = 2
    {
        if KeyCont.key_secondary[0] = 2
        {
            x += spd/2;
        }
        else
        {
            x += spd;
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Azul Inversa
if currentState = PLAYER_STATE.blue_inverse {

    y += ySPD;
    ySPD -= grav;


if ySPD &gt;= 0 &amp;&amp; KeyCont.key_down[0] = 0 { ySPD *= caida; }

if y - height &lt;= BattleWindowCont.yPos { 

    ySPD = 0;
    y = BattleWindowCont.yPos + height;
    
    if KeyCont.key_down[0] = 1 || KeyCont.key_down[0] = 2 {

        ySPD = +jumpPOW;
     
    }
           
}

if y - height &lt;= BattleWindowCont.yPos {

    if grav &gt; 0.4 {
    
        grav = 0.4;
        audio_play_sound(snd_Azotado,0,false);
        
    }
    
}
 
    //Movimiento Horizontal
    if KeyCont.key_left[0] = 1 || KeyCont.key_left[0] = 2
    {
        if KeyCont.key_secondary[0] = 2
        {
            x -= spd/2;
        }
        else
        {
            x -= spd;
        }
    }
    if KeyCont.key_right[0] = 1 || KeyCont.key_right[0] = 2
    {
        if KeyCont.key_secondary[0] = 2
        {
            x += spd/2;
        }
        else
        {
            x += spd;
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Azul Derecha

if currentState = PLAYER_STATE.blue_derecha {

    x += ySPD;
    ySPD += grav;
    
if ySPD &lt;= 0 &amp;&amp; KeyCont.key_left[0] = 0 { ySPD *= caida; }

if x + height &gt;= BattleWindowCont.xPos + BattleWindowCont.width {

    ySPD = 0;
    x = BattleWindowCont.xPos + BattleWindowCont.width - height;
        
    if KeyCont.key_left[0] = 1 || KeyCont.key_left[0] = 2 {

        ySPD = -jumpPOW;
     
    }
       
}

if x + height &gt;= BattleWindowCont.xPos + BattleWindowCont.width

{
    if grav &gt; 0.4 {
    
        grav = 0.4;
        audio_play_sound(snd_Azotado,0,false);
        
    }
    
}    
    
    //Movimiento Vertical
    if KeyCont.key_up[0] = 1 || KeyCont.key_up[0] = 2
    {
        if KeyCont.key_secondary[0] = 2
        {
            y -= spd/2;
        }
        else
        {
            y -= spd;
        }
    }
    if KeyCont.key_down[0] = 1 || KeyCont.key_down[0] = 2
    {
        if KeyCont.key_secondary[0] = 2
        {
            y += spd/2;
        }
        else
        {
            y += spd;
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Azul Izquierda

if currentState = PLAYER_STATE.blue_izquierda {

    x += ySPD;
    ySPD -= grav;
    
if ySPD &gt;= 0 &amp;&amp; KeyCont.key_right[0] = 0 { ySPD *= caida; }

if x - height &lt;= BattleWindowCont.xPos {

    ySPD = 0;
    x = BattleWindowCont.xPos + height;
        
    if KeyCont.key_right[0] = 1 || KeyCont.key_right[0] = 2 {

        ySPD = +jumpPOW;
     
    }
       
}

if x - height &lt;= BattleWindowCont.xPos {

    if grav &gt; 0.4 {
    
        grav = 0.4;
        audio_play_sound(snd_Azotado,0,false);
        
    }
    
}    
    
    //Movimiento Vertical
    if KeyCont.key_up[0] = 1 || KeyCont.key_up[0] = 2
    {
        if KeyCont.key_secondary[0] = 2
        {
            y -= spd/2;
        }
        else
        {
            y -= spd;
        }
    }
    if KeyCont.key_down[0] = 1 || KeyCont.key_down[0] = 2
    {
        if KeyCont.key_secondary[0] = 2
        {
            y += spd/2;
        }
        else
        {
            y += spd;
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Green behavior
dirX = sign(KeyCont.key_right[0]) - sign(KeyCont.key_left[0]);
dirY = sign(KeyCont.key_down[0]) - sign(KeyCont.key_up[0]);
if abs(dirX) + abs(dirY) != 0
{
    dir = point_direction(x,y,x+dirX,y+dirY);
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Mantener Jugador en la caja (No Peleando)


if global.peleando = 0 {

if x + width &gt;= BattleWindowCont.xPos + BattleWindowCont.width
{
    x = BattleWindowCont.xPos + BattleWindowCont.width - width;
}
if x - width &lt;= BattleWindowCont.xPos
{
    x = BattleWindowCont.xPos + width;
}
if y + height &gt;= BattleWindowCont.yPos + BattleWindowCont.height
{
    y = BattleWindowCont.yPos + BattleWindowCont.height - height;
}
if y - height &lt;= BattleWindowCont.yPos
{
    y = BattleWindowCont.yPos + height;
}

}

if x = oldX &amp;&amp; y = oldY
{
    moving = false;
}
else
{
    moving = true;
}

oldX = x;
oldY = y;
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Changing color
if changingState = 1
{
    
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Alma Roja Inversa

if currentState = PLAYER_STATE.red_inverse
{
    if KeyCont.key_up[0] = 1 || KeyCont.key_up[0] = 2
    {
        if KeyCont.key_secondary[0] = 2
        {
            y += spd/2;
        }
        else
        {
            y += spd;
        }
    }
    if KeyCont.key_down[0] = 1 || KeyCont.key_down[0] = 2
    {
        if KeyCont.key_secondary[0] = 2
        {
            y -= spd/2;
        }
        else
        {
            y -= spd;
        }
    }

    //Horizontal movement
    if KeyCont.key_left[0] = 1 || KeyCont.key_left[0] = 2
    {
        if KeyCont.key_secondary[0] = 2
        {
            x += spd/2;
        }
        else
        {
            x += spd;
        }
    }
    if KeyCont.key_right[0] = 1 || KeyCont.key_right[0] = 2
    {
        if KeyCont.key_secondary[0] = 2
        {
            x -= spd/2;
        }
        else
        {
            x -= spd;
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Alma Roja Derecha

if currentState = PLAYER_STATE.red_derecha
{
    if KeyCont.key_up[0] = 1 || KeyCont.key_up[0] = 2
    {
        if KeyCont.key_secondary[0] = 2
        {
            x += spd/2;
        }
        else
        {
            x += spd;
        }
    }
    if KeyCont.key_down[0] = 1 || KeyCont.key_down[0] = 2
    {
        if KeyCont.key_secondary[0] = 2
        {
            x -= spd/2;
        }
        else
        {
            x -= spd;
        }
    }

    //Horizontal movement
    if KeyCont.key_left[0] = 1 || KeyCont.key_left[0] = 2
    {
        if KeyCont.key_secondary[0] = 2
        {
            y -= spd/2;
        }
        else
        {
            y -= spd;
        }
    }
    if KeyCont.key_right[0] = 1 || KeyCont.key_right[0] = 2
    {
        if KeyCont.key_secondary[0] = 2
        {
            y += spd/2;
        }
        else
        {
            y += spd;
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Alma Roja Izquierda

if currentState = PLAYER_STATE.red_izquierda {

    if KeyCont.key_up[0] = 1 || KeyCont.key_up[0] = 2
    {
        if KeyCont.key_secondary[0] = 2
        {
            x -= spd/2;
        }
        else
        {
            x -= spd;
        }
    }
    if KeyCont.key_down[0] = 1 || KeyCont.key_down[0] = 2
    {
        if KeyCont.key_secondary[0] = 2
        {
            x += spd/2;
        }
        else
        {
            x += spd;
        }
    }

    //Movimiento Horizontal
    if KeyCont.key_left[0] = 1 || KeyCont.key_left[0] = 2
    {
        if KeyCont.key_secondary[0] = 2
        {
            y += spd/2;
        }
        else
        {
            y += spd;
        }
    }
    if KeyCont.key_right[0] = 1 || KeyCont.key_right[0] = 2
    {
        if KeyCont.key_secondary[0] = 2
        {
            y -= spd/2;
        }
        else
        {
            y -= spd;
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Alma Amarilla
if currentState = PLAYER_STATE.yellow {

if (shoot &gt; 0) shoot = 0;

    if KeyCont.key_up[0] = 1 || KeyCont.key_up[0] = 2 {
    
        if KeyCont.key_secondary[0] = 2 {
        
            y -= spd/2;
            
        } else {
        
            y -= spd;
            
        }
    }
    
    if KeyCont.key_down[0] = 1 || KeyCont.key_down[0] = 2 {
    
        if KeyCont.key_secondary[0] = 2 {
        
            y += spd/2;
            
        } else {
        
            y += spd;
            
        }
    }

    //Movimiento Horizontal
    if KeyCont.key_left[0] = 1 || KeyCont.key_left[0] = 2
    {
        if KeyCont.key_secondary[0] = 2
        {
            x -= spd/2;
        }
        else
        {
            x -= spd;
        }
    }
    if KeyCont.key_right[0] = 1 || KeyCont.key_right[0] = 2
    {
        if KeyCont.key_secondary[0] = 2
        {
            x += spd/2;
        }
        else
        {
            x += spd;
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///KARMA EN COSAS AZULES

if place_meeting(x,y,obj_engrane_azul) || place_meeting(x,y,obj_engrane_azul2) {

    if 
    
    KeyCont.key_up[0] = 1 || 
    KeyCont.key_up[0] = 2 ||
    KeyCont.key_down[0] = 1 || 
    KeyCont.key_down[0] = 2 ||
    KeyCont.key_left[0] = 1 || 
    KeyCont.key_left[0] = 2 || 
    KeyCont.key_right[0] = 1 ||
    KeyCont.key_right[0] = 2 {

        scr_karma();
    
    }
}

if place_meeting(x,y,obj_engrane_azul) || place_meeting(x,y,obj_engrane_azul2) { 

    if KeyCont.key_up[0] = 0 &amp;&amp; ySPD &gt; 0 {
    
        scr_karma();
        
    }
}

if place_meeting(x,y,obj_engrane_azul) || place_meeting(x,y,obj_engrane_azul2) {

    if global.hp == 0 &amp;&amp; global.kl == 0 {
    
        if 
    
        KeyCont.key_up[0] = 1 || 
        KeyCont.key_up[0] = 2 ||
        KeyCont.key_down[0] = 1 || 
        KeyCont.key_down[0] = 2 ||
        KeyCont.key_left[0] = 1 || 
        KeyCont.key_left[0] = 2 || 
        KeyCont.key_right[0] = 1 ||
        KeyCont.key_right[0] = 2 {

            damage_player(2);

        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Quitar enfriamiento

if enfriamiento &gt; 0 {

enfriamiento--;

}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Alma Celeste



if currentState = PLAYER_STATE.cyan {


if !instance_exists(obj_colision_cyan) {

instance_create(self.x, self.y, obj_colision_cyan);

}

if cerca = 1 {

    if KeyCont.key_up[0] = 1 || KeyCont.key_up[0] = 2
    {
        if KeyCont.key_secondary[0] = 2
        {
            y -= spd/2;
        }
        else
        {
            y -= spd;
        }
    }
    if KeyCont.key_down[0] = 1 || KeyCont.key_down[0] = 2
    {
        if KeyCont.key_secondary[0] = 2
        {
            y += spd/2;
        }
        else
        {
            y += spd;
        }
    }

    //Movimiento Horizontal
    if KeyCont.key_left[0] = 1 || KeyCont.key_left[0] = 2
    {
        if KeyCont.key_secondary[0] = 2
        {
            x -= spd/2;
        }
        else
        {
            x -= spd;
        }
    }
    if KeyCont.key_right[0] = 1 || KeyCont.key_right[0] = 2
    {
        if KeyCont.key_secondary[0] = 2
        {
            x += spd/2;
        }
        else
        {
            x += spd;
        }
    }
}

}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Dibujar

if active = 0 { draw_self(); }

else { if view_current = 1 { draw_self(); } }

if BattleWindowCont.Apagar = true { draw_self(); }

//Debug
//draw_set_font(bit);
//draw_set_color(c_yellow);

//draw_text(16, 86, "BattlePos: " + string(BattleWindowCont.yPos));
//draw_text(16, 86, "Shoot: " + string(shoot));
//draw_text(16, 16, "Golpes: " + string(global.golpes));
//draw_text(16,136,"X: " + string(x));
//draw_text(16,106,"Y: " + string(y));
//draw_text(16,76,"ySPD: " + string(ySPD));
//draw_text(16,166,"yPos+Height: " + string(BattleWindowCont.yPos + BattleWindowCont.height));
//draw_text(16,196,"Y+Height: " + string(y + height));
//draw_text(16,226,"yPos-Height: " + string(BattleWindowCont.yPos - BattleWindowCont.height));
//draw_text(16, 226, "yPos+HC: " + string(BattleWindowCont.yPos + height));

//draw_text(16, 16, "x: " + string(x));
//draw_text(16, 46, "y: " + string(y));

/*
draw_text(16, 666,  "ySPD: " + string(ySPD));
draw_text(16, 666, "xPos+width: " + string(BattleWindowCont.xPos + BattleWindowCont.width));
draw_text(16, 666, "xPos-width: " + string(BattleWindowCont.xPos - BattleWindowCont.width));
draw_text(16, 666, "xPos: " + string(BattleWindowCont.xPos));
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="52">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//BattleWindowCont.Apagar = false;

currentState = PLAYER_STATE.blue_izquierda;
grav = 7;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="51">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//BattleWindowCont.Apagar = false;

currentState = PLAYER_STATE.blue_derecha;
grav = 7;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="50">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//BattleWindowCont.Apagar = false;

/*

if PlayerHeart.currentState != PLAYER_STATE.blue_inverse {

    PlayerHeart.active = 1;
    targetState = PLAYER_STATE.blue_inverse;
    var inst = instance_create(0,0,BlueSwipe);
    inst.targetState = targetState;
    PlayerHeart.currentState = targetState;
    audio_play_sound(snd_Ping,1,false);
}


*/


currentState = PLAYER_STATE.blue_inverse;
grav = 7;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="49">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//BattleWindowCont.Apagar = true;

currentState = PLAYER_STATE.blue;
grav = 7;
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
