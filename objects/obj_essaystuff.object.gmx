<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>mystring = " ";
lock = 0;
caracteres = 1;
siner = 0;
yPos = 410;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if !instance_exists(obj_rombo_nc) {

caracteres = string_length(mystring);

if keyboard_check_pressed(vk_anykey) {

    exc= 0;
    if(keyboard_check_pressed(vk_right)) exc= 1;
    if(keyboard_check_pressed(vk_left)) exc= 1;
    if(keyboard_check_pressed(vk_up)) exc= 1;
    if(keyboard_check_pressed(vk_down)) exc= 1;
    if(keyboard_check_pressed(vk_backspace)) exc= 1;
    if(keyboard_check_pressed(vk_shift)) exc= 1;
    if(keyboard_check_pressed(vk_enter)) exc= 1;
    if(keyboard_check_pressed(vk_escape)) exc= 1;
    if exc == 0 &amp;&amp; caracteres &lt; 9 { mystring+= keyboard_lastchar; }
        
}

if keyboard_check_pressed(vk_backspace) &amp;&amp; string_length(mystring) &gt; 1 {

    stl= string_length(mystring);
    mystring= string_delete(mystring, stl, 1);
    
}


if keyboard_check_pressed(vk_enter) &amp;&amp; lock = 0  {

instance_create(320, 240, obj_rombo_nc);
lock++;

}

}


siner++;
yPos = 410 + sin(siner / 12) * 25;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="73">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if !instance_exists(obj_rombo_nc) {

draw_set_font(fnt_menu);
draw_set_halign(fa_center);
draw_set_color(c_gray);
draw_text(320, 440, "Press ENTER to confirm");
draw_set_color(c_white);
draw_text(320, 40, "Enter your name");
draw_set_font(fnt_mars_big);
if caracteres &gt; 1 { draw_text(320, 240, mystring); } else {

draw_set_alpha(0.3);
draw_text(320, 240, "NAME");
draw_set_alpha(1);

}

}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_sprite_ext(spr_degradado, 0, 320, yPos, 1, 1, 0, c_gray, 1);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
