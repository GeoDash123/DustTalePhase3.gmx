<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>opcion = 1;
lock = 0;
lock2 = 0;
angulo = 0;
siner = 0;
yPos = 0;
yPos2 = 0;
pagina = 0;
locksalir = 0;

ajustes = false;
creditos = false;

if !audio_is_playing(snd_menu) { audio_play_sound(snd_menu, 100, true); }

instance_create(764, 96, obj_caja_info);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Controles

if instance_exists(obj_rombo_caja) { exit; }

/*Salir de Ajustes*/

if pagina = 1 &amp;&amp; KeyCont.key_secondary[0] = 1 &amp;&amp; locksalir = 0 {

instance_create(320, 240, obj_rombo_caja);
locksalir++;

}

/*Salir de Ajustes*/

if KeyCont.key_down[0] = 1 &amp;&amp; lock = 0 {

opcion++; 
audio_play_sound(snd_move, 0, false);

}

if KeyCont.key_up[0] = 1 &amp;&amp; lock = 0 { 

opcion--; 
audio_play_sound(snd_move, 0, false);

}

if pagina = 1 {
if KeyCont.key_right[0] = 1 || KeyCont.key_left[0] = 1 { audio_play_sound(snd_move, 0, false); } }


if pagina = 0 {

if opcion &lt; 1 { opcion = 4; }
if opcion &gt; 4 { opcion = 1; }

} else if pagina = 1 {

if opcion &lt; 1 { opcion = 5; }
if opcion &gt; 5 { opcion = 1; }

}


if pagina = 0 { //Esta en el menu principal

if opcion = 1 &amp;&amp; KeyCont.key_primary[0] = 1 &amp;&amp; lock = 0 &amp;&amp; global.terminos = 0 {

audio_play_sound(snd_player_hurt, 0, false);
instance_create(320, 240, obj_rombo_tyc);
lock++;

}


if opcion = 1 &amp;&amp; KeyCont.key_primary[0] = 1 &amp;&amp; lock = 0 &amp;&amp; global.terminos = 1 { //Iniciar mandando a Combate

audio_stop_sound(snd_menu);
audio_play_sound(snd_seleccion, 0, false);
instance_create(0,0,obj_transicion_manipulable);
with obj_transicion_manipulable { orden = room_preparar_combate; }
lock++;

}

if opcion = 2 &amp;&amp; KeyCont.key_primary[0] = 1 &amp;&amp; lock = 0 { //Ajustes

audio_play_sound(snd_seleccion, 0, false);
t = instance_create(0,0,obj_cambiar_pagina);
t.siguiente = 1;
lock++;

}


if opcion = 3 &amp;&amp; KeyCont.key_primary[0] = 1 &amp;&amp; lock = 0 { //Creditos

audio_play_sound(snd_seleccion, 0, false);
t = instance_create(0,0,obj_transicion_manipulable);
t.orden = room_creditos
lock++;

}


if opcion = 4 &amp;&amp; KeyCont.key_primary[0] = 1 &amp;&amp; lock = 0 { //Salir

audio_play_sound(snd_seleccion, 0, false);
instance_create(0,0,obj_transicion_manipulable);
with obj_transicion_manipulable { orden = room_salir; }
lock++;

}

} else if pagina = 1 &amp;&amp; locksalir = 0 { //Esta en los ajustes

if KeyCont.key_right[0] = 1 &amp;&amp; opcion = 1 { global.volumen+=0.05; }
if KeyCont.key_left[0] = 1 &amp;&amp; opcion = 1 { global.volumen-=0.05; }

if KeyCont.key_right[0] = 1 &amp;&amp; opcion = 2 { global.BOpacidad+=0.05; }
if KeyCont.key_left[0] = 1 &amp;&amp; opcion = 2 { global.BOpacidad-=0.05; }

if (KeyCont.key_right[0] = 1 || KeyCont.key_left[0] = 1) &amp;&amp; opcion = 3 {
if global.ModoFacil = 0 { global.ModoFacil = 1; } else { global.ModoFacil = 0; }
}

if KeyCont.key_right[0] = 1 &amp;&amp; opcion = 4 { global.BColor++; }
if KeyCont.key_left[0] = 1 &amp;&amp; opcion = 4 { global.BColor--; }

if global.volumen &lt;= 0 { global.volumen = 0; }
if global.volumen &gt;= 1.25 { global.volumen = 1.25; }

if global.BOpacidad &lt;= 0 { global.BOpacidad = 0; }
if global.BOpacidad &gt;= 1 { global.BOpacidad = 1; }

if global.BColor &lt;= 0 { global.BColor = 0; }
if global.BColor &gt;= 10 { global.BColor = 10; }

if (KeyCont.key_right[0] = 1 || KeyCont.key_left[0] = 1) &amp;&amp; opcion = 5 {
if global.instrucciones = 1 { global.instrucciones = 0; } else { global.instrucciones = 1; }
}

}


if opcion = 3 &amp;&amp; pagina = 1 { obj_caja_info.deslizar = 1 } else { obj_caja_info.deslizar = 0; }
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Sinusoide del Logo
siner++;
angulo = 0 + sin(siner / 30) * 25;
yPos2 = 100 + sin(siner / 15) * 10;

//Sinusoide del Degradado
yPos = 410 + sin(siner / 12) * 25;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="72">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Fondo Degradado
draw_sprite_ext(spr_degradado, 0, 320, yPos, 1, 1, 0, c_gray, 1);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Dibujar Menu

if instance_exists(obj_rombo_caja) { exit; }

//Logo
draw_sprite_ext(spr_logo_rombo, 0, 320, yPos2, 1, 1, angulo, c_white, 1);

draw_set_font(fnt_menu);
draw_set_color(c_white);

if pagina = 0 { //Menu Principal

draw_set_halign(fa_center);
draw_text(320, 240, "Iniciar");
draw_text(320, 280, "Ajustes");
if opcion != 3 { draw_text(320, 320, "Créditos"); }
draw_text(320, 360, "Salir");

if opcion = 1 {

draw_set_color(c_yellow);
draw_text(320, 240, "Iniciar");

} else if opcion = 2 {

draw_set_color(c_yellow);
draw_text(320, 280, "Ajustes");

} else if opcion = 3 {

draw_set_color(c_yellow);
draw_text(320, 320, "Créditos");

} else {

draw_set_color(c_yellow);
draw_text(320, 360, "Salir");

}

} else if pagina = 1 { //Ajustes

draw_sprite_ext(spr_caja_ajustes, 0, 320, 320, 2, 2, 0, c_white, 1);

draw_set_halign(fa_center);
draw_text(320, 450, "Pulsa X para volver al menú");
draw_set_halign(fa_left);
draw_set_valign(fa_center);
draw_text(40, 240, "Volúmen General" + " [" + string(round(global.volumen * 100)) + "%]");
draw_text(40, 300, "Opacidad de los #Controles" + " [" + string(round(global.BOpacidad * 100)) + "%]");

//Mostrar informacion de la caja extra
draw_set_color(c_gray);
draw_text(obj_caja_info.x - 100, obj_caja_info.y, "Tendrás más vida #y no habrá efect-#os visuales de la #cámara de comba-#te.");
draw_set_colour(c_white);

if global.ModoFacil = 0 {
draw_text(350, 240, "Modo Fácil" + " [No]");
} else { draw_text(350, 240, "Modo Fácil" + " [Si]"); }


if global.BColor = 0 {

draw_text(350, 300, "Color de los #Controles" + " [Aqua]");

} else if global.BColor = 1 { draw_text(350, 300, "Color de los #Controles" + " [Lima]");

} else if global.BColor = 2 { draw_text(350, 300, "Color de los #Controles" + " [Azul]");

} else if global.BColor = 3 { draw_text(350, 300, "Color de los #Controles" + " [Gris]");

} else if global.BColor = 4 { draw_text(350, 300, "Color de los #Controles" + " [Verde]");

} else if global.BColor = 5 { draw_text(350, 300, "Color de los #Controles" + " [Marrón]");

} else if global.BColor = 6 { draw_text(350, 300, "Color de los #Controles" + " [Anaranjado]");

} else if global.BColor = 7 { draw_text(350, 300, "Color de los #Controles" + " [Púrpura]");

} else if global.BColor = 8 { draw_text(350, 300, "Color de los #Controles" + " [Rojo]");

} else if global.BColor = 9 { draw_text(350, 300, "Color de los #Controles" + " [Blanco]");

} else { draw_text(350, 300, "Color de los #Controles" + " [Amarillo]"); }


draw_set_halign(fa_center);
draw_text(320, 360, "Instrucciones al iniciar");
if global.instrucciones = 1 { 
draw_text(320, 400, "[Si]"); 
} else { draw_text(320, 400, "[No]"); }
draw_set_halign(fa_left);


if opcion = 1 {

draw_set_color(c_yellow);
draw_text(40, 240, "Volúmen General" + " [" + string(round(global.volumen * 100)) + "%]");

} else if opcion = 2 {

draw_set_color(c_yellow);
draw_text(40, 300, "Opacidad de los #Controles" + " [" + string(round(global.BOpacidad * 100)) + "%]");

} else if opcion = 3 {

draw_set_color(c_yellow);
if global.ModoFacil = 0 {
draw_text(350, 240, "Modo Fácil" + " [No]");
} else { draw_text(350, 240, "Modo Fácil" + " [Si]"); }

} else if opcion = 4 {

draw_set_color(c_yellow);
if global.BColor = 0 {

draw_text(350, 300, "Color de los #Controles" + " [Aqua]");

} else if global.BColor = 1 { draw_text(350, 300, "Color de los #Controles" + " [Lima]");

} else if global.BColor = 2 { draw_text(350, 300, "Color de los #Controles" + " [Azul]");

} else if global.BColor = 3 { draw_text(350, 300, "Color de los #Controles" + " [Gris]");

} else if global.BColor = 4 { draw_text(350, 300, "Color de los #Controles" + " [Verde]");

} else if global.BColor = 5 { draw_text(350, 300, "Color de los #Controles" + " [Marrón]");

} else if global.BColor = 6 { draw_text(350, 300, "Color de los #Controles" + " [Anaranjado]");

} else if global.BColor = 7 { draw_text(350, 300, "Color de los #Controles" + " [Púrpura]");

} else if global.BColor = 8 { draw_text(350, 300, "Color de los #Controles" + " [Rojo]");

} else if global.BColor = 9 { draw_text(350, 300, "Color de los #Controles" + " [Blanco]");

} else { draw_text(350, 300, "Color de los #Controles" + " [Amarillo]"); }

} else {

draw_set_color(c_yellow);
draw_set_halign(fa_center);
draw_text(320, 360, "Instrucciones al iniciar");
if global.instrucciones = 1 { 
draw_text(320, 400, "[Si]"); 
} else { draw_text(320, 400, "[No]"); }
draw_set_halign(fa_left);

}

}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
